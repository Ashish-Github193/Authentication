name: Test

run-name: ${{ github.actor }} is testing

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-24.04

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r fastapi/requirements.txt
          
      - name: Install pre-commit and isort
        run: |
          pip install pre-commit isort

      - name: Run isort (apply changes)
        run: |
          isort .

      - name: Run black (apply changes)
        run: |
          black .

      - name: Run pre-commit hooks
        run: |
          pre-commit run --all-files

      - name: Commit changes if any
        if: ${{ success() }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Apply code formatting via pre-commit hooks"
          git push

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        run: |
          pytest fastapi/app/tests
